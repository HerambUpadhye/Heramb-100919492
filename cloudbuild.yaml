steps:
# 1. BUILD the Docker image for the 'server' component
#    - Uses the Docker builder image.
#    - Tags the image with the Artifact Registry path and the unique $COMMIT_SHA.
- name: 'gcr.io/cloud-builders/docker'
  id: Build-Image-Server
  args:
  - 'build'
  - '-t'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/heramb-100919492/app:$COMMIT_SHA'
  - '-f' # Specify the custom Dockerfile name
  - '1209lab2'
  - '.' # Build context is the current directory

# 2. PUSH the Docker image to Artifact Registry
#    - Uses the Docker builder image to push the tagged image.
- name: 'gcr.io/cloud-builders/docker'
  id: Push-Image-Server
  args:
  - 'push'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/heramb-100919492/app:$COMMIT_SHA'

# 3. DEPLOY the new image to Cloud Run (Continuous Deployment)
#    - Uses the gcloud builder image.
#    - Deploys the newly pushed image to the Cloud Run service named 'lab-2-server'.
- name: 'gcr.io/cloud-builders/gcloud'
  id: Deploy-to-Cloud-Run
  args:
  - 'run'
  - 'deploy'
  - 'lab-2-server' # <-- Change this if your Cloud Run service name is different!
  - '--image'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/heramb-100919492/app:$COMMIT_SHA'
  - '--region'
  - 'us-central1'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated' # Set this based on your assignment needs
  # The database-related '--set-env-vars' argument has been completely removed.
timeout: '1600s'